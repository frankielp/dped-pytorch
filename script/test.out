Wed May 31 19:04:29 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.105.01   Driver Version: 515.105.01   CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA GeForce ...  Off  | 00000000:02:00.0 Off |                  N/A |
|  0%   38C    P8    10W / 180W |      0MiB / 11264MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
no change     /sw/spack/opt/spack/linux-ubuntu20.04-skylake/gcc-9.3.0/anaconda3-2021.05-r6itwa7dvyh4gisucvjnrjz3uom3s7oq/condabin/conda
no change     /sw/spack/opt/spack/linux-ubuntu20.04-skylake/gcc-9.3.0/anaconda3-2021.05-r6itwa7dvyh4gisucvjnrjz3uom3s7oq/bin/conda
no change     /sw/spack/opt/spack/linux-ubuntu20.04-skylake/gcc-9.3.0/anaconda3-2021.05-r6itwa7dvyh4gisucvjnrjz3uom3s7oq/bin/conda-env
no change     /sw/spack/opt/spack/linux-ubuntu20.04-skylake/gcc-9.3.0/anaconda3-2021.05-r6itwa7dvyh4gisucvjnrjz3uom3s7oq/bin/activate
no change     /sw/spack/opt/spack/linux-ubuntu20.04-skylake/gcc-9.3.0/anaconda3-2021.05-r6itwa7dvyh4gisucvjnrjz3uom3s7oq/bin/deactivate
no change     /sw/spack/opt/spack/linux-ubuntu20.04-skylake/gcc-9.3.0/anaconda3-2021.05-r6itwa7dvyh4gisucvjnrjz3uom3s7oq/etc/profile.d/conda.sh
no change     /sw/spack/opt/spack/linux-ubuntu20.04-skylake/gcc-9.3.0/anaconda3-2021.05-r6itwa7dvyh4gisucvjnrjz3uom3s7oq/etc/fish/conf.d/conda.fish
no change     /sw/spack/opt/spack/linux-ubuntu20.04-skylake/gcc-9.3.0/anaconda3-2021.05-r6itwa7dvyh4gisucvjnrjz3uom3s7oq/shell/condabin/Conda.psm1
no change     /sw/spack/opt/spack/linux-ubuntu20.04-skylake/gcc-9.3.0/anaconda3-2021.05-r6itwa7dvyh4gisucvjnrjz3uom3s7oq/shell/condabin/conda-hook.ps1
no change     /sw/spack/opt/spack/linux-ubuntu20.04-skylake/gcc-9.3.0/anaconda3-2021.05-r6itwa7dvyh4gisucvjnrjz3uom3s7oq/lib/python3.8/site-packages/xontrib/conda.xsh
no change     /sw/spack/opt/spack/linux-ubuntu20.04-skylake/gcc-9.3.0/anaconda3-2021.05-r6itwa7dvyh4gisucvjnrjz3uom3s7oq/etc/profile.d/conda.csh
no change     /home/lpnquynh/.bashrc
No action taken.
Testing ref/models.py
(?, 100, 100, 3) (?, 10000) (?, 1)
enhanced image
 Tensor("generator/add_32:0", shape=(?, 100, 100, 3), dtype=float32)
adversarial image
 Tensor("Reshape_4:0", shape=(?, 100, 100, 1), dtype=float32)
discrim predictions
 Tensor("discriminator/Softmax:0", shape=(?, 2), dtype=float32)
Done
Testing utils/models.py
torch.Size([50, 3, 100, 100]) torch.Size([150, 10000]) torch.Size([150, 1])
enhanced image
 tensor([[[[-0.3250, -0.1481, -0.7374,  ..., -0.3167, -0.1891,  0.7061],
          [-0.2707, -0.0511, -0.7670,  ..., -0.4531,  0.6276,  0.7412],
          [ 0.3072,  0.2969, -0.6037,  ..., -0.6455, -0.4287,  0.4772],
          ...,
          [ 0.5952,  0.8295, -0.2016,  ..., -0.6852, -0.3518,  0.5175],
          [ 0.5210,  0.6819,  0.7077,  ..., -0.0198, -0.4715,  0.3598],
          [ 0.5949,  0.1280, -0.1242,  ...,  0.2696,  0.5050,  0.2634]],

         [[ 0.2281,  0.7972,  0.7139,  ...,  0.1429, -0.1583, -0.0477],
          [ 0.7584,  0.8589,  0.5998,  ...,  0.0647, -0.6592, -0.8164],
          [ 0.1731,  0.4770,  0.5092,  ..., -0.5667, -0.8443, -0.8873],
          ...,
          [ 0.8800,  0.3929,  0.8571,  ..., -0.6966, -0.6842, -0.9777],
          [ 0.0332, -0.1630,  0.2743,  ..., -0.8541, -0.8455, -0.9615],
          [-0.2013, -0.7721, -0.1412,  ..., -0.8248, -0.7925, -0.7907]],

         [[-0.2931, -0.2249, -0.6341,  ...,  0.3306,  0.0625, -0.0184],
          [-0.4884,  0.4906, -0.4465,  ...,  0.5772,  0.5016,  0.0562],
          [-0.3052,  0.4676,  0.0783,  ...,  0.4229,  0.4743,  0.6872],
          ...,
          [-0.5374, -0.6485, -0.2710,  ...,  0.7326,  0.4583, -0.0558],
          [ 0.3347, -0.1975, -0.1269,  ...,  0.4433,  0.6627,  0.7283],
          [ 0.6856,  0.3540,  0.3916,  ..., -0.0187,  0.2505,  0.2034]]],


        [[[-0.3250, -0.1481, -0.7374,  ..., -0.3167, -0.1891,  0.7061],
          [-0.2707, -0.0511, -0.7670,  ..., -0.4531,  0.6276,  0.7412],
          [ 0.3072,  0.2969, -0.6037,  ..., -0.6455, -0.4287,  0.4772],
          ...,
          [ 0.5952,  0.8295, -0.2016,  ..., -0.6852, -0.3518,  0.5175],
          [ 0.5210,  0.6819,  0.7077,  ..., -0.0198, -0.4715,  0.3598],
          [ 0.5949,  0.1280, -0.1242,  ...,  0.2696,  0.5050,  0.2634]],

         [[ 0.2281,  0.7972,  0.7139,  ...,  0.1429, -0.1583, -0.0477],
          [ 0.7584,  0.8589,  0.5998,  ...,  0.0647, -0.6592, -0.8164],
          [ 0.1731,  0.4770,  0.5092,  ..., -0.5667, -0.8443, -0.8873],
          ...,
          [ 0.8800,  0.3929,  0.8571,  ..., -0.6966, -0.6842, -0.9777],
          [ 0.0332, -0.1630,  0.2743,  ..., -0.8541, -0.8455, -0.9615],
          [-0.2013, -0.7721, -0.1412,  ..., -0.8248, -0.7925, -0.7907]],

         [[-0.2931, -0.2249, -0.6341,  ...,  0.3306,  0.0625, -0.0184],
          [-0.4884,  0.4906, -0.4465,  ...,  0.5772,  0.5016,  0.0562],
          [-0.3052,  0.4676,  0.0783,  ...,  0.4229,  0.4743,  0.6872],
          ...,
          [-0.5374, -0.6485, -0.2710,  ...,  0.7326,  0.4583, -0.0558],
          [ 0.3347, -0.1975, -0.1269,  ...,  0.4433,  0.6627,  0.7283],
          [ 0.6856,  0.3540,  0.3916,  ..., -0.0187,  0.2505,  0.2034]]],


        [[[-0.3250, -0.1481, -0.7374,  ..., -0.3167, -0.1891,  0.7061],
          [-0.2707, -0.0511, -0.7670,  ..., -0.4531,  0.6276,  0.7412],
          [ 0.3072,  0.2969, -0.6037,  ..., -0.6455, -0.4287,  0.4772],
          ...,
          [ 0.5952,  0.8295, -0.2016,  ..., -0.6852, -0.3518,  0.5175],
          [ 0.5210,  0.6819,  0.7077,  ..., -0.0198, -0.4715,  0.3598],
          [ 0.5949,  0.1280, -0.1242,  ...,  0.2696,  0.5050,  0.2634]],

         [[ 0.2281,  0.7972,  0.7139,  ...,  0.1429, -0.1583, -0.0477],
          [ 0.7584,  0.8589,  0.5998,  ...,  0.0647, -0.6592, -0.8164],
          [ 0.1731,  0.4770,  0.5092,  ..., -0.5667, -0.8443, -0.8873],
          ...,
          [ 0.8800,  0.3929,  0.8571,  ..., -0.6966, -0.6842, -0.9777],
          [ 0.0332, -0.1630,  0.2743,  ..., -0.8541, -0.8455, -0.9615],
          [-0.2013, -0.7721, -0.1412,  ..., -0.8248, -0.7925, -0.7907]],

         [[-0.2931, -0.2249, -0.6341,  ...,  0.3306,  0.0625, -0.0184],
          [-0.4884,  0.4906, -0.4465,  ...,  0.5772,  0.5016,  0.0562],
          [-0.3052,  0.4676,  0.0783,  ...,  0.4229,  0.4743,  0.6872],
          ...,
          [-0.5374, -0.6485, -0.2710,  ...,  0.7326,  0.4583, -0.0558],
          [ 0.3347, -0.1975, -0.1269,  ...,  0.4433,  0.6627,  0.7283],
          [ 0.6856,  0.3540,  0.3916,  ..., -0.0187,  0.2505,  0.2034]]],


        ...,


        [[[-0.3250, -0.1481, -0.7374,  ..., -0.3167, -0.1891,  0.7061],
          [-0.2707, -0.0511, -0.7670,  ..., -0.4531,  0.6276,  0.7412],
          [ 0.3072,  0.2969, -0.6037,  ..., -0.6455, -0.4287,  0.4772],
          ...,
          [ 0.5952,  0.8295, -0.2016,  ..., -0.6852, -0.3518,  0.5175],
          [ 0.5210,  0.6819,  0.7077,  ..., -0.0198, -0.4715,  0.3598],
          [ 0.5949,  0.1280, -0.1242,  ...,  0.2696,  0.5050,  0.2634]],

         [[ 0.2281,  0.7972,  0.7139,  ...,  0.1429, -0.1583, -0.0477],
          [ 0.7584,  0.8589,  0.5998,  ...,  0.0647, -0.6592, -0.8164],
          [ 0.1731,  0.4770,  0.5092,  ..., -0.5667, -0.8443, -0.8873],
          ...,
          [ 0.8800,  0.3929,  0.8571,  ..., -0.6966, -0.6842, -0.9777],
          [ 0.0332, -0.1630,  0.2743,  ..., -0.8541, -0.8455, -0.9615],
          [-0.2013, -0.7721, -0.1412,  ..., -0.8248, -0.7925, -0.7907]],

         [[-0.2931, -0.2249, -0.6341,  ...,  0.3306,  0.0625, -0.0184],
          [-0.4884,  0.4906, -0.4465,  ...,  0.5772,  0.5016,  0.0562],
          [-0.3052,  0.4676,  0.0783,  ...,  0.4229,  0.4743,  0.6872],
          ...,
          [-0.5374, -0.6485, -0.2710,  ...,  0.7326,  0.4583, -0.0558],
          [ 0.3347, -0.1975, -0.1269,  ...,  0.4433,  0.6627,  0.7283],
          [ 0.6856,  0.3540,  0.3916,  ..., -0.0187,  0.2505,  0.2034]]],


        [[[-0.3250, -0.1481, -0.7374,  ..., -0.3167, -0.1891,  0.7061],
          [-0.2707, -0.0511, -0.7670,  ..., -0.4531,  0.6276,  0.7412],
          [ 0.3072,  0.2969, -0.6037,  ..., -0.6455, -0.4287,  0.4772],
          ...,
          [ 0.5952,  0.8295, -0.2016,  ..., -0.6852, -0.3518,  0.5175],
          [ 0.5210,  0.6819,  0.7077,  ..., -0.0198, -0.4715,  0.3598],
          [ 0.5949,  0.1280, -0.1242,  ...,  0.2696,  0.5050,  0.2634]],

         [[ 0.2281,  0.7972,  0.7139,  ...,  0.1429, -0.1583, -0.0477],
          [ 0.7584,  0.8589,  0.5998,  ...,  0.0647, -0.6592, -0.8164],
          [ 0.1731,  0.4770,  0.5092,  ..., -0.5667, -0.8443, -0.8873],
          ...,
          [ 0.8800,  0.3929,  0.8571,  ..., -0.6966, -0.6842, -0.9777],
          [ 0.0332, -0.1630,  0.2743,  ..., -0.8541, -0.8455, -0.9615],
          [-0.2013, -0.7721, -0.1412,  ..., -0.8248, -0.7925, -0.7907]],

         [[-0.2931, -0.2249, -0.6341,  ...,  0.3306,  0.0625, -0.0184],
          [-0.4884,  0.4906, -0.4465,  ...,  0.5772,  0.5016,  0.0562],
          [-0.3052,  0.4676,  0.0783,  ...,  0.4229,  0.4743,  0.6872],
          ...,
          [-0.5374, -0.6485, -0.2710,  ...,  0.7326,  0.4583, -0.0558],
          [ 0.3347, -0.1975, -0.1269,  ...,  0.4433,  0.6627,  0.7283],
          [ 0.6856,  0.3540,  0.3916,  ..., -0.0187,  0.2505,  0.2034]]],


        [[[-0.3250, -0.1481, -0.7374,  ..., -0.3167, -0.1891,  0.7061],
          [-0.2707, -0.0511, -0.7670,  ..., -0.4531,  0.6276,  0.7412],
          [ 0.3072,  0.2969, -0.6037,  ..., -0.6455, -0.4287,  0.4772],
          ...,
          [ 0.5952,  0.8295, -0.2016,  ..., -0.6852, -0.3518,  0.5175],
          [ 0.5210,  0.6819,  0.7077,  ..., -0.0198, -0.4715,  0.3598],
          [ 0.5949,  0.1280, -0.1242,  ...,  0.2696,  0.5050,  0.2634]],

         [[ 0.2281,  0.7972,  0.7139,  ...,  0.1429, -0.1583, -0.0477],
          [ 0.7584,  0.8589,  0.5998,  ...,  0.0647, -0.6592, -0.8164],
          [ 0.1731,  0.4770,  0.5092,  ..., -0.5667, -0.8443, -0.8873],
          ...,
          [ 0.8800,  0.3929,  0.8571,  ..., -0.6966, -0.6842, -0.9777],
          [ 0.0332, -0.1630,  0.2743,  ..., -0.8541, -0.8455, -0.9615],
          [-0.2013, -0.7721, -0.1412,  ..., -0.8248, -0.7925, -0.7907]],

         [[-0.2931, -0.2249, -0.6341,  ...,  0.3306,  0.0625, -0.0184],
          [-0.4884,  0.4906, -0.4465,  ...,  0.5772,  0.5016,  0.0562],
          [-0.3052,  0.4676,  0.0783,  ...,  0.4229,  0.4743,  0.6872],
          ...,
          [-0.5374, -0.6485, -0.2710,  ...,  0.7326,  0.4583, -0.0558],
          [ 0.3347, -0.1975, -0.1269,  ...,  0.4433,  0.6627,  0.7283],
          [ 0.6856,  0.3540,  0.3916,  ..., -0.0187,  0.2505,  0.2034]]]],
       grad_fn=<TanhBackward0>)
adversarial image
 tensor([[[[-3.1713e+17, -1.4449e+17, -7.1948e+17,  ..., -3.0900e+17,
           -1.8445e+17,  6.8894e+17],
          [-2.6406e+17, -4.9826e+16, -7.4837e+17,  ..., -4.4206e+17,
            6.1237e+17,  7.2314e+17],
          [ 2.9973e+17,  2.8969e+17, -5.8898e+17,  ..., -6.2975e+17,
           -4.1829e+17,  4.6562e+17],
          ...,
          [ 5.8074e+17,  8.0934e+17, -1.9665e+17,  ..., -6.6855e+17,
           -3.4325e+17,  5.0493e+17],
          [ 5.0831e+17,  6.6529e+17,  6.9044e+17,  ..., -1.9288e+16,
           -4.5999e+17,  3.5108e+17],
          [ 5.8044e+17,  1.2487e+17, -1.2121e+17,  ...,  2.6308e+17,
            4.9267e+17,  2.5703e+17]]],


        [[[ 2.2806e-01,  7.9725e-01,  7.1385e-01,  ...,  1.4286e-01,
           -1.5832e-01, -4.7747e-02],
          [ 7.5842e-01,  8.5893e-01,  5.9975e-01,  ...,  6.4691e-02,
           -6.5922e-01, -8.1642e-01],
          [ 1.7309e-01,  4.7702e-01,  5.0915e-01,  ..., -5.6667e-01,
           -8.4426e-01, -8.8731e-01],
          ...,
          [ 8.8004e-01,  3.9289e-01,  8.5708e-01,  ..., -6.9657e-01,
           -6.8415e-01, -9.7770e-01],
          [ 3.3161e-02, -1.6301e-01,  2.7435e-01,  ..., -8.5412e-01,
           -8.4553e-01, -9.6145e-01],
          [-2.0130e-01, -7.7206e-01, -1.4117e-01,  ..., -8.2482e-01,
           -7.9248e-01, -7.9072e-01]]],


        [[[-2.9312e-01, -2.2489e-01, -6.3413e-01,  ...,  3.3060e-01,
            6.2482e-02, -1.8378e-02],
          [-4.8840e-01,  4.9058e-01, -4.4655e-01,  ...,  5.7723e-01,
            5.0163e-01,  5.6152e-02],
          [-3.0517e-01,  4.6764e-01,  7.8258e-02,  ...,  4.2293e-01,
            4.7425e-01,  6.8724e-01],
          ...,
          [-5.3745e-01, -6.4846e-01, -2.7100e-01,  ...,  7.3255e-01,
            4.5826e-01, -5.5752e-02],
          [ 3.3471e-01, -1.9749e-01, -1.2693e-01,  ...,  4.4328e-01,
            6.6267e-01,  7.2827e-01],
          [ 6.8555e-01,  3.5396e-01,  3.9160e-01,  ..., -1.8687e-02,
            2.5052e-01,  2.0336e-01]]],


        ...,


        [[[-3.2505e-01, -1.4810e-01, -7.3743e-01,  ..., -3.1671e-01,
           -1.8905e-01,  7.0613e-01],
          [-2.7065e-01, -5.1069e-02, -7.6704e-01,  ..., -4.5309e-01,
            6.2764e-01,  7.4119e-01],
          [ 3.0720e-01,  2.9692e-01, -6.0367e-01,  ..., -6.4546e-01,
           -4.2872e-01,  4.7724e-01],
          ...,
          [ 5.9523e-01,  8.2953e-01, -2.0155e-01,  ..., -6.8523e-01,
           -3.5181e-01,  5.1753e-01],
          [ 5.2099e-01,  6.8189e-01,  7.0766e-01,  ..., -1.9769e-02,
           -4.7147e-01,  3.5984e-01],
          [ 5.9492e-01,  1.2798e-01, -1.2423e-01,  ...,  2.6964e-01,
            5.0496e-01,  2.6344e-01]]],


        [[[ 2.2806e-01,  7.9725e-01,  7.1385e-01,  ...,  1.4286e-01,
           -1.5832e-01, -4.7747e-02],
          [ 7.5842e-01,  8.5893e-01,  5.9975e-01,  ...,  6.4691e-02,
           -6.5922e-01, -8.1642e-01],
          [ 1.7309e-01,  4.7702e-01,  5.0915e-01,  ..., -5.6667e-01,
           -8.4426e-01, -8.8731e-01],
          ...,
          [ 8.8004e-01,  3.9289e-01,  8.5708e-01,  ..., -6.9657e-01,
           -6.8415e-01, -9.7770e-01],
          [ 3.3161e-02, -1.6301e-01,  2.7435e-01,  ..., -8.5412e-01,
           -8.4553e-01, -9.6145e-01],
          [-2.0130e-01, -7.7206e-01, -1.4117e-01,  ..., -8.2482e-01,
           -7.9248e-01, -7.9072e-01]]],


        [[[-2.9312e-01, -2.2489e-01, -6.3413e-01,  ...,  3.3060e-01,
            6.2482e-02, -1.8378e-02],
          [-4.8840e-01,  4.9058e-01, -4.4655e-01,  ...,  5.7723e-01,
            5.0163e-01,  5.6152e-02],
          [-3.0517e-01,  4.6764e-01,  7.8258e-02,  ...,  4.2293e-01,
            4.7425e-01,  6.8724e-01],
          ...,
          [-5.3745e-01, -6.4846e-01, -2.7100e-01,  ...,  7.3255e-01,
            4.5826e-01, -5.5752e-02],
          [ 3.3471e-01, -1.9749e-01, -1.2693e-01,  ...,  4.4328e-01,
            6.6267e-01,  7.2827e-01],
          [ 6.8555e-01,  3.5396e-01,  3.9160e-01,  ..., -1.8687e-02,
            2.5052e-01,  2.0336e-01]]]], grad_fn=<ViewBackward0>)
discrim predictions
 tensor([[0.2025, 0.7975],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145],
        [0.4855, 0.5145]], grad_fn=<SoftmaxBackward0>)
the networks architectures

ResNet(
  (generator): Sequential(
    (0): Conv2d(3, 64, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4))
    (1): ReLU(inplace=True)
    (2): ResidualBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
    (3): ResidualBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
    (4): ResidualBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
    (5): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): ReLU(inplace=True)
    (7): ResidualBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
    (8): ResidualBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
    (9): ResidualBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bn2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    )
    (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): Conv2d(64, 3, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4))
    (13): Tanh()
  )
)
Adversarial(
  (discriminator): Sequential(
    (0): ConvLayer(
      (layers): Sequential(
        (0): Conv2d(1, 48, kernel_size=(11, 11), stride=(4, 4), padding=(5, 5))
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): ConvLayer(
      (layers): Sequential(
        (0): Conv2d(48, 128, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): ConvLayer(
      (layers): Sequential(
        (0): Conv2d(128, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): ConvLayer(
      (layers): Sequential(
        (0): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): ConvLayer(
      (layers): Sequential(
        (0): Conv2d(192, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
  (fc): Sequential(
    (0): Linear(in_features=6272, out_features=1024, bias=True)
    (1): LeakyReLU(negative_slope=0.2, inplace=True)
  )
  (out): Linear(in_features=1024, out_features=2, bias=True)
  (softmax): Softmax(dim=1)
)
models.py: Done
